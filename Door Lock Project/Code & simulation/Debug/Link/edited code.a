;/*
; *
; *
; Names :
;
; 1- Diaa Ahmed Riad
; 2- Raed Abd-ElHakim
; 3- Hazem Ayman
; 4- Mustafa nasr-Eldein
; 5- Eslam Mansour
;
; * Created: 12/22/2023 1:34:01 AM
; * Author: dell
; */
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;// GLobal variables
;char button; //avariable to store the operation value of the keypad
;int  number;  //variable stor the address of the eepron which is the ID
;char start = 0; //flag
;char hundreds,tens,units;   // to calculate the number enetered
;char EEnum;                 //the product of the modulus operation to store the data stored in the eeprom //EEnum = numb ...
;char re_enter_store;        // to store the rentered new pw
;
;
;
;//keypad Function
;unsigned char getnumberKP ()
; 0000 001F {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0020     while (1)
;PCODE: $0000000F VOL: 0
; 0000 0021         {
; 0000 0022         PORTA.0 = 0;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0023         PORTA.1 = 1;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0024         PORTA.2 = 1;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0025         if (PINA.3 == 0)    //Returns number one
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0026             {
; 0000 0027             while (PINA.3 == 0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0028             return 1;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0029             }
; 0000 002A         if (PINA.4 == 0)   //Returns number four
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 002B             {
; 0000 002C             while (PINA.4 == 0);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 002D             return 4;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 002E             }
; 0000 002F         if (PINA.5 == 0)    //Returns number seven
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0030             {
; 0000 0031             while (PINA.5 == 0);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0032             return 7;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0033             }
; 0000 0034         if (PINA.6 == 0)    //Returns *
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0035             {
; 0000 0036             while (PINA.6 == 0);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0037             return '*';
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0038             }
; 0000 0039 
; 0000 003A         PORTA.0 = 1;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 003B         PORTA.1 = 0;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 003C         PORTA.2 = 1;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 003D         if (PINA.3 == 0)    //Returns number Two
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 003E             {
; 0000 003F             while (PINA.3 == 0);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0040             return 2;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0041             }
; 0000 0042         if (PINA.4 == 0)   //Returns number five
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0043             {
; 0000 0044             while (PINA.4 == 0);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0045             return 5;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0046             }
; 0000 0047         if (PINA.5 == 0)    //Returns number eight
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0048             {
; 0000 0049             while (PINA.5 == 0);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 004A             return 8;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 004B             }
; 0000 004C         if (PINA.6 == 0)    //Returns number zero
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 004D             {
; 0000 004E             while (PINA.6 == 0);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 004F             return 0;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0050             }
; 0000 0051         PORTA.0 = 1;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0052         PORTA.1 = 1;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0053         PORTA.2 = 0;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0054         if (PINA.3 == 0)    //Returns number three
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0055             {
; 0000 0056             while (PINA.3 == 0);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0057             return 3;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0058             }
; 0000 0059         if (PINA.4 == 0)   //Returns number six
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 005A             {
; 0000 005B             while (PINA.4 == 0);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 005C             return 6;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 005D             }
; 0000 005E         if (PINA.5 == 0)    //Returns number nine
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 005F             {
; 0000 0060             while (PINA.5 == 0);
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0061             return 9;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0062             }
; 0000 0063         if (PINA.6 == 0)    //Returns #
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0064             {
; 0000 0065             while (PINA.6 == 0);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 0066             return '#';
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0067             }
; 0000 0068 
; 0000 0069 
; 0000 006A         }
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 006B }
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;
;//EEPROM WRITE fuction
;void WriteInEEPROM (int EEaddress, char data)
; 0000 006F {
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0070     while (EECR.1 == 1);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;	EEaddress -> R18,R19
;	data -> R17
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 0071     EEAR = EEaddress;
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0072     EEDR = data;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0073     EECR.2 = 1;
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0074     EECR.1 = 1;
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0075 }
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;//EEPROM READ Function
;char ReadFromEEPROM (int address)
; 0000 0078 {
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 0079     while (EECR.1 == 1);
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;	address -> R16,R17
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 007A     EEAR = address;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 007B     EECR.0 = 1;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 007C     return EEDR;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 007D }
;PCODE: $000000E0 VOL: 0
;//entered number function
;char threedigitnumber ()
; 0000 0080 {
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 0081     hundreds = getnumberKP();
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 0082     lcd_clear();
;PCODE: $000000E5 VOL: 0
; 0000 0083     lcd_printf("You Entered: %d", hundreds);
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 0084     delay_ms(250);
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 0085     lcd_clear();
;PCODE: $000000F3 VOL: 0
; 0000 0086     lcd_printf("You Entered: *");
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 0087     tens = getnumberKP();
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 0088     lcd_clear();
;PCODE: $000000FD VOL: 0
; 0000 0089     lcd_printf("You Entered: *%d", tens);
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 008A     delay_ms(250);
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 008B     lcd_clear();
;PCODE: $0000010B VOL: 0
; 0000 008C     lcd_printf("You Entered: **");
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 008D     units = getnumberKP();
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 008E     lcd_clear();
;PCODE: $00000115 VOL: 0
; 0000 008F     lcd_printf("You Entered: **%d", units);
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 0090     delay_ms(250);
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 0091     lcd_clear();
;PCODE: $00000123 VOL: 0
; 0000 0092     lcd_printf("You Entered: ***");
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 0093     number = hundreds * 100 + tens * 10 + units;
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 0094     return number, hundreds, tens, units;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 0095 }
;PCODE: $0000013D VOL: 0
;char withoutstar ()
; 0000 0097 {
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 0098     hundreds = getnumberKP();
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 0099     lcd_clear();
;PCODE: $00000142 VOL: 0
; 0000 009A     lcd_printf("You Entered: %d", hundreds);
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 009B     tens = getnumberKP();
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 009C     lcd_clear();
;PCODE: $0000014F VOL: 0
; 0000 009D     lcd_printf("You Entered: %d%d", hundreds, tens);
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 009E     units = getnumberKP();
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 009F     lcd_clear();
;PCODE: $0000015F VOL: 0
; 0000 00A0     lcd_printf("You Entered: %d%d%d", hundreds, tens, units);
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 00A1     delay_ms(2000);
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 00A2     number = hundreds * 100 + tens * 10 + units;
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 00A3     return number, hundreds, tens, units;}
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;//to get the number in 8 bit
;
;//buzzing
;void buzzing ()
; 0000 00A8 {
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 00A9     PORTB.0 = 1;
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0000 00AA     PORTB.3 = 1;
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 00AB     delay_ms(500);
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 00AC     PORTB.0 = 0;
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 00AD     PORTB.3 = 0;
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 00AE     delay_ms(500);
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 00AF }
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;
;//door opening
;void dooropenning ()
; 0000 00B3 {
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 00B4     lcd_clear();
;PCODE: $00000197 VOL: 0
; 0000 00B5     PORTB.2 = 1;
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 00B6     PORTB.1 = 1;
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 00B7     lcd_printfxy(0, 0, "  Door Opened");
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 00B8     //lcd_printfxy(0,1,"shut the door !!");
; 0000 00B9     delay_ms(2000);
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 00BA     lcd_clear();
;PCODE: $000001A9 VOL: 0
; 0000 00BB     PORTB.1 = 0;
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 00BC     PORTB.2 = 0;
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 00BD }
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;
;
;//main fuction
;void main(void)
; 0000 00C2 {
;PCODE: $000001B0 VOL: 0
; 0000 00C3     //Keypad Configuration
; 0000 00C4     DDRA = 0b00000111;
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0000 00C5     PORTA = 0b11111000;
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 00C6     //output intities configuration
; 0000 00C7     DDRB.0 = 1;       //buzzer
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0000 00C8     DDRB.1 = 1;      // solenoid lock
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
; 0000 00C9     DDRB.3 = 1;     // alarm led
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0000 00CA     DDRB.2 = 1;    // go ahead led
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 00CB 
; 0000 00CC     // LCD initiation
; 0000 00CD     lcd_init(16);
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 00CE     // database
; 0000 00CF    // comment after burning it one time
; 0000 00D0 
; 0000 00D1      WriteInEEPROM(111,203%256);
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
; 0000 00D2      WriteInEEPROM(126,123%256);
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0000 00D3      WriteInEEPROM(128,315%256);
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 00D4      WriteInEEPROM(130,223%256);
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 00D5      WriteInEEPROM(132,279%256);
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 00D6 
; 0000 00D7     //Welcome message when powered or reset
; 0000 00D8     lcd_printfxy(5, 0, "Welcome");
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 00D9     lcd_printfxy(0, 1, "Smart Lock");
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0000 00DA     delay_ms(2000);
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 00DB     lcd_clear();
;PCODE: $000001EB VOL: 0
; 0000 00DC     //External Interupt
; 0000 00DD     MCUCR |= (1 << 1);      // rising edge INT0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 00DE     MCUCR |= (1 << 0);     //rising edge INT0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 00DF     SREG.7 = 1;           // Global interupt setting
;PCODE: $000001F2 VOL: 0
; 0000 00E0     GICR |= (1 << 6);    //initiation of INT0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
; 0000 00E1     //External Interupt 1
; 0000 00E2     MCUCR |= (1 << 2);       // rising edge INT1
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0000 00E3     MCUCR |= (1 << 3);      //rising edge INT1
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 00E4     SREG.7 = 1;            // Global interupt setting
;PCODE: $000001FC VOL: 0
; 0000 00E5     GICR |= (1 << 7);     //initiation of INT0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
; 0000 00E6 
; 0000 00E7     while (1)
;PCODE: $00000200 VOL: 0
; 0000 00E8         {
; 0000 00E9         lcd_printfxy(0, 0, "Press * to enter");
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0000 00EA         button = getnumberKP();
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
; 0000 00EB 
; 0000 00EC         if (button == '*')
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
; 0000 00ED             {
; 0000 00EE             lcd_clear();
;PCODE: $00000211 VOL: 0
; 0000 00EF             start = 1;
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 00F0             lcd_printf(" Enter your ID !");
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 00F1             delay_ms(1000);
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 00F2             lcd_clear();
;PCODE: $0000021D VOL: 0
; 0000 00F3             while (start == 1)
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 00F4                 {
; 0000 00F5                 threedigitnumber ();
;PCODE: $00000222 VOL: 0
; 0000 00F6                 //lcd_printfxy(0,0,"number = %d%d%d", hundreds,tens,units);
; 0000 00F7                 //lcd_printfxy(0,1,"number = %d", number);
; 0000 00F8                 //delay_ms(500);
; 0000 00F9                 switch (number)
;PCODE: $00000223 VOL: 0
; 0000 00FA                     {
; 0000 00FB                     case 128 :
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 00FC                         {
; 0000 00FD                         lcd_clear();
;PCODE: $00000226 VOL: 0
; 0000 00FE                         lcd_printf("Hi, Amr.");
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 00FF                         lcd_printfxy(0, 1, " Enter your PC!");
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 0100                         threedigitnumber ();
;PCODE: $00000239 VOL: 0
; 0000 0101                         EEnum = number % 256;
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
; 0000 0102                         if (EEnum ==  ReadFromEEPROM(128))
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0000 0103                             {
; 0000 0104                             lcd_clear();
;PCODE: $00000242 VOL: 0
; 0000 0105                             lcd_printf("You may Enter.");
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
; 0000 0106                             delay_ms(1000);
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0000 0107                             dooropenning ();
;PCODE: $0000024C VOL: 0
; 0000 0108                             delay_ms(1000);
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 0109                             start = 0;
;PCODE: $0000024F VOL: 0
; 0000 010A 
; 0000 010B                             }
; 0000 010C                         else
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
; 0000 010D                             {
; 0000 010E                             lcd_clear();
;PCODE: $00000252 VOL: 0
; 0000 010F                             lcd_printf(" Wrong Password ");
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
; 0000 0110                             buzzing ();
;PCODE: $0000025A VOL: 0
; 0000 0111                             delay_ms(1000);
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
; 0000 0112                             start = 0;
;PCODE: $0000025D VOL: 0
; 0000 0113 
; 0000 0114                             }
;PCODE: $0000025E VOL: 0
; 0000 0115                         }
; 0000 0116                     break;
;PCODE: $0000025F VOL: 0
; 0000 0117                     case 126 :
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
; 0000 0118                         {
; 0000 0119                         lcd_clear();
;PCODE: $00000263 VOL: 0
; 0000 011A                         lcd_printf("Hi,Ahmed.");
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
; 0000 011B                         lcd_printfxy(0, 1, " Enter your PC!");
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
; 0000 011C                         threedigitnumber ();
;PCODE: $00000276 VOL: 0
; 0000 011D                         EEnum = number;
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
; 0000 011E                         delay_ms(2000);
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
; 0000 011F 
; 0000 0120                         if (EEnum == ReadFromEEPROM(126))
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
; 0000 0121                             {
; 0000 0122                             lcd_clear();
;PCODE: $00000280 VOL: 0
; 0000 0123                             lcd_printf("You may Enter.");
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
; 0000 0124                             delay_ms(1000);
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
; 0000 0125                             dooropenning ();
;PCODE: $0000028A VOL: 0
; 0000 0126                             delay_ms(1000);
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0000 0127                             start = 0;
;PCODE: $0000028D VOL: 0
; 0000 0128 
; 0000 0129                             }
; 0000 012A                         else
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
; 0000 012B                             {
; 0000 012C                             lcd_clear();
;PCODE: $00000290 VOL: 0
; 0000 012D                             lcd_printf(" Wrong Password ");
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
; 0000 012E                             buzzing ();
;PCODE: $00000298 VOL: 0
; 0000 012F                             delay_ms(1000);
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
; 0000 0130                             start = 0;
;PCODE: $0000029B VOL: 0
; 0000 0131 
; 0000 0132                             }
;PCODE: $0000029C VOL: 0
; 0000 0133 
; 0000 0134                         }
; 0000 0135                     break;
;PCODE: $0000029D VOL: 0
; 0000 0136 
; 0000 0137                     case  130:
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 0138                         {
; 0000 0139                         lcd_clear();
;PCODE: $000002A1 VOL: 0
; 0000 013A                         lcd_printf("Hi, Adel.");
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
; 0000 013B                         lcd_printfxy(0, 1, " Enter your PC!");
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
; 0000 013C                         threedigitnumber ();
;PCODE: $000002B4 VOL: 0
; 0000 013D                         EEnum = number % 256;
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
; 0000 013E                         if (EEnum == ReadFromEEPROM(130))
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
; 0000 013F                             {
; 0000 0140                             lcd_clear();
;PCODE: $000002BD VOL: 0
; 0000 0141                             lcd_printf("You may Enter.");
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
; 0000 0142                             delay_ms(1000);
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 0143                             dooropenning ();
;PCODE: $000002C7 VOL: 0
; 0000 0144                             delay_ms(1000);
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
; 0000 0145                             start = 0;
;PCODE: $000002CA VOL: 0
; 0000 0146 
; 0000 0147                             }
; 0000 0148                         else
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
; 0000 0149                             {
; 0000 014A                             lcd_clear();
;PCODE: $000002CD VOL: 0
; 0000 014B                             lcd_printf(" Wrong Password ");
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
; 0000 014C                             buzzing ();
;PCODE: $000002D5 VOL: 0
; 0000 014D                             delay_ms(1000);
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
; 0000 014E                             start = 0;
;PCODE: $000002D8 VOL: 0
; 0000 014F 
; 0000 0150                             }
;PCODE: $000002D9 VOL: 0
; 0000 0151                         }
; 0000 0152                     break;
;PCODE: $000002DA VOL: 0
; 0000 0153 
; 0000 0154                     case 132:
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
; 0000 0155                         {
; 0000 0156                         lcd_clear();
;PCODE: $000002DE VOL: 0
; 0000 0157                         lcd_printf("Hi, Omar.");
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
; 0000 0158                         lcd_printfxy(0, 1, " Enter your PC!");
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
; 0000 0159                         threedigitnumber ();
;PCODE: $000002F1 VOL: 0
; 0000 015A                         EEnum = number % 256;
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
; 0000 015B                         if (EEnum == ReadFromEEPROM(132))
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
; 0000 015C                             {
; 0000 015D                             lcd_clear();
;PCODE: $000002FA VOL: 0
; 0000 015E                             lcd_printf("You may Enter.");
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
; 0000 015F                             delay_ms(1000);
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
; 0000 0160                             dooropenning ();
;PCODE: $00000304 VOL: 0
; 0000 0161                             delay_ms(1000);
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
; 0000 0162                             start = 0;
;PCODE: $00000307 VOL: 0
; 0000 0163 
; 0000 0164                             }
; 0000 0165                         else
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
; 0000 0166                             {
; 0000 0167                             lcd_clear();
;PCODE: $0000030A VOL: 0
; 0000 0168                             lcd_printf(" Wrong Password ");
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
; 0000 0169                             buzzing ();
;PCODE: $00000312 VOL: 0
; 0000 016A                             buzzing ();
;PCODE: $00000313 VOL: 0
; 0000 016B                             delay_ms(1000);
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
; 0000 016C                             start = 0;
;PCODE: $00000316 VOL: 0
; 0000 016D 
; 0000 016E                             }
;PCODE: $00000317 VOL: 0
; 0000 016F                         }
; 0000 0170 
; 0000 0171                     break;
;PCODE: $00000318 VOL: 0
; 0000 0172 
; 0000 0173                     case 111:
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
; 0000 0174                         {
; 0000 0175                         lcd_clear();
;PCODE: $0000031C VOL: 0
; 0000 0176                         lcd_printf("Hi, Prof.H.");
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
; 0000 0177                         lcd_printfxy(0, 1, " Enter your PC!");
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
; 0000 0178                         threedigitnumber ();
;PCODE: $0000032F VOL: 0
; 0000 0179                         EEnum = number % 256;
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
; 0000 017A                         if (EEnum == ReadFromEEPROM(111))
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
; 0000 017B                             {
; 0000 017C                             lcd_clear();
;PCODE: $00000338 VOL: 0
; 0000 017D                             lcd_printf("You may Enter.");
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
; 0000 017E                             delay_ms(1000);
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
; 0000 017F                             dooropenning ();
;PCODE: $00000342 VOL: 0
; 0000 0180                             delay_ms(1000);
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
; 0000 0181                             start = 0;
;PCODE: $00000345 VOL: 0
; 0000 0182 
; 0000 0183                             }
; 0000 0184                         else
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
; 0000 0185                             {
; 0000 0186                             lcd_clear();
;PCODE: $00000348 VOL: 0
; 0000 0187                             lcd_printf(" Wrong Password ");
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
; 0000 0188                             buzzing ();
;PCODE: $00000350 VOL: 0
; 0000 0189                             buzzing ();
;PCODE: $00000351 VOL: 0
; 0000 018A                             delay_ms(1000);
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
; 0000 018B                             start = 0;
;PCODE: $00000354 VOL: 0
; 0000 018C 
; 0000 018D                             }
;PCODE: $00000355 VOL: 0
; 0000 018E                         }
; 0000 018F                     break;
;PCODE: $00000356 VOL: 0
; 0000 0190 
; 0000 0191                     default:
;PCODE: $00000357 VOL: 0
; 0000 0192                         {
; 0000 0193                      lcd_clear();
;PCODE: $00000358 VOL: 0
; 0000 0194                         lcd_printf(" Wrong ID ");
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
; 0000 0195                         buzzing ();
;PCODE: $00000360 VOL: 0
; 0000 0196                         start = 0;
;PCODE: $00000361 VOL: 0
; 0000 0197                         delay_ms(1000);
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
; 0000 0198 
; 0000 0199                         }
; 0000 019A                     break;
;PCODE: $00000364 VOL: 0
; 0000 019B                     }
;PCODE: $00000365 VOL: 0
; 0000 019C 
; 0000 019D                 }
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
; 0000 019E             }
; 0000 019F 
; 0000 01A0         else
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
; 0000 01A1             {
; 0000 01A2             lcd_clear();
;PCODE: $0000036A VOL: 0
; 0000 01A3             lcd_printf("Press * to start");
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
; 0000 01A4             buzzing ();
;PCODE: $00000372 VOL: 0
; 0000 01A5             delay_ms(1000);
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
; 0000 01A6             lcd_clear();
;PCODE: $00000375 VOL: 0
; 0000 01A7             }
;PCODE: $00000376 VOL: 0
; 0000 01A8 
; 0000 01A9 
; 0000 01AA 
; 0000 01AB         }
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
; 0000 01AC }
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;
;
;
;// Admin Access sequence
;
;interrupt [2] void Adminaccess (void)
; 0000 01B3 {    int id;
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
; 0000 01B4      lcd_clear();
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;	id -> R16,R17
;PCODE: $00000380 VOL: 0
; 0000 01B5     start = 1;
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
; 0000 01B6     lcd_printfxy(0, 0, "Admin Acess");
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
; 0000 01B7     lcd_printfxy(4, 1, "Requested");
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
; 0000 01B8     delay_ms(2000);
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
; 0000 01B9     lcd_clear();
;PCODE: $0000039B VOL: 0
; 0000 01BA     lcd_printf(" Enter Admin PC !");
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
; 0000 01BB     delay_ms(1000);
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
; 0000 01BC     lcd_clear();
;PCODE: $000003A5 VOL: 0
; 0000 01BD     while (start == 1)
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
; 0000 01BE         {
; 0000 01BF         threedigitnumber ();
;PCODE: $000003AA VOL: 0
; 0000 01C0         EEnum = number % 256;
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
; 0000 01C1         if (EEnum == ReadFromEEPROM(111) )
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
; 0000 01C2             {
; 0000 01C3             lcd_clear();
;PCODE: $000003B3 VOL: 0
; 0000 01C4             lcd_printf("Enter Student ID");
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
; 0000 01C5             threedigitnumber ();
;PCODE: $000003BB VOL: 0
; 0000 01C6             id=number;
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
; 0000 01C7             delay_ms(1000);
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
; 0000 01C8             switch (id)
;PCODE: $000003C0 VOL: 0
; 0000 01C9                    {
; 0000 01CA                    case 111 :
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
; 0000 01CB                    case 126 :
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
; 0000 01CC                    case 128 :
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
; 0000 01CD                    case 130 :
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
; 0000 01CE                    case 132 :
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
; 0000 01CF                    { lcd_clear();
;PCODE: $000003D7 VOL: 0
; 0000 01D0                    lcd_printf(" Enter new PC !");
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
; 0000 01D1                    delay_ms(1000);
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
; 0000 01D2                    lcd_clear();
;PCODE: $000003E1 VOL: 0
; 0000 01D3                    withoutstar ();
;PCODE: $000003E2 VOL: 0
; 0000 01D4                    EEnum = number % 256;
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
; 0000 01D5                    lcd_clear();
;PCODE: $000003E6 VOL: 0
; 0000 01D6                    WriteInEEPROM(id, EEnum);
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
; 0000 01D7                    lcd_printf("PC changed !!");
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
; 0000 01D8                    delay_ms(1000);
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
; 0000 01D9                    lcd_clear();
;PCODE: $000003F3 VOL: 0
; 0000 01DA                    start = 0;
;PCODE: $000003F4 VOL: 0
; 0000 01DB                    lcd_clear();}
;PCODE: $000003F5 VOL: 0
; 0000 01DC 
; 0000 01DD                     break;
;PCODE: $000003F6 VOL: 0
; 0000 01DE                    default:
;PCODE: $000003F7 VOL: 0
; 0000 01DF                         {
; 0000 01E0                         lcd_clear();
;PCODE: $000003F8 VOL: 0
; 0000 01E1                         lcd_printf(" Wrong PC ");
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
; 0000 01E2                         buzzing ();
;PCODE: $00000400 VOL: 0
; 0000 01E3                         buzzing ();
;PCODE: $00000401 VOL: 0
; 0000 01E4                         start = 0;
;PCODE: $00000402 VOL: 0
; 0000 01E5 
; 0000 01E6                         delay_ms(1000);
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
; 0000 01E7                         }
; 0000 01E8                     break;
;PCODE: $00000405 VOL: 0
; 0000 01E9                     }
;PCODE: $00000406 VOL: 0
; 0000 01EA 
; 0000 01EB             }
; 0000 01EC             else
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
; 0000 01ED             {
; 0000 01EE                lcd_clear();
;PCODE: $00000409 VOL: 0
; 0000 01EF                lcd_printf(" Wrong ID ");
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
; 0000 01F0                buzzing ();
;PCODE: $00000411 VOL: 0
; 0000 01F1                buzzing ();
;PCODE: $00000412 VOL: 0
; 0000 01F2                start = 0;
;PCODE: $00000413 VOL: 0
; 0000 01F3                delay_ms(1000);
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
; 0000 01F4               }
;PCODE: $00000416 VOL: 0
; 0000 01F5 }
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
; 0000 01F6 }
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;
;
;
;// Student PC change access
;
;interrupt [3] void change_pass_code (void)
; 0000 01FD {           int ID,PC;
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
; 0000 01FE             lcd_clear();
;PCODE: $0000041F VOL: 0
;	ID -> R16,R17
;	PC -> R18,R19
;PCODE: $00000420 VOL: 0
; 0000 01FF             start = 1;
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
; 0000 0200             lcd_printf(" Enter your ID !");
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
; 0000 0201             delay_ms(1000);
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
; 0000 0202             lcd_clear();
;PCODE: $0000042C VOL: 0
; 0000 0203             threedigitnumber ();
;PCODE: $0000042D VOL: 0
; 0000 0204             ID=number;
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
; 0000 0205              switch (ID)
;PCODE: $00000430 VOL: 0
; 0000 0206                    {
; 0000 0207                    case 111 :
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
; 0000 0208                    case 126 :
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
; 0000 0209                    case 128 :
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
; 0000 020A                    case 130 :
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
; 0000 020B                    case 132 :
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
; 0000 020C                    {
; 0000 020D                    EEnum = ReadFromEEPROM(ID);
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
; 0000 020E                    lcd_clear();
;PCODE: $0000044A VOL: 0
; 0000 020F                    lcd_printf(" Enter old PC !");
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
; 0000 0210                    delay_ms(1000);
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
; 0000 0211                    lcd_clear();
;PCODE: $00000454 VOL: 0
; 0000 0212                    withoutstar ();
;PCODE: $00000455 VOL: 0
; 0000 0213                    PC = number % 256;
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
; 0000 0214                    lcd_clear();
;PCODE: $0000045A VOL: 0
; 0000 0215                    if (PC == EEnum)
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
; 0000 0216                    {
; 0000 0217                             lcd_clear();
;PCODE: $00000460 VOL: 0
; 0000 0218                             lcd_printf(" Enter new PC !");
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
; 0000 0219                             delay_ms(1000);
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
; 0000 021A                             withoutstar ();
;PCODE: $0000046A VOL: 0
; 0000 021B                             EEnum = number % 256;
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
; 0000 021C                             lcd_clear();
;PCODE: $0000046E VOL: 0
; 0000 021D                             lcd_printf("Re-enter new PC !");
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
; 0000 021E                             delay_ms(1000);
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
; 0000 021F                             withoutstar ();
;PCODE: $00000478 VOL: 0
; 0000 0220                             re_enter_store = number % 256;
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
; 0000 0221                             lcd_clear();
;PCODE: $0000047C VOL: 0
; 0000 0222                             if (re_enter_store == EEnum)
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
; 0000 0223                                 {
; 0000 0224                                 WriteInEEPROM(ID,EEnum);
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
; 0000 0225                                 lcd_printf("PC changed !!");
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
; 0000 0226                                 delay_ms(1000);
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
; 0000 0227                                 lcd_clear();
;PCODE: $0000048C VOL: 0
; 0000 0228                                 start = 0;
;PCODE: $0000048D VOL: 0
; 0000 0229                                 }
; 0000 022A                            else
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
; 0000 022B                                 {
; 0000 022C 
; 0000 022D                                 lcd_clear();
;PCODE: $00000490 VOL: 0
; 0000 022E                                 lcd_printf("Contact Admin");
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
; 0000 022F                                 buzzing ();
;PCODE: $00000498 VOL: 0
; 0000 0230                                 buzzing ();
;PCODE: $00000499 VOL: 0
; 0000 0231                                 delay_ms(1000);
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
; 0000 0232                                 lcd_clear();
;PCODE: $0000049C VOL: 0
; 0000 0233                                 start = 0;
;PCODE: $0000049D VOL: 0
; 0000 0234                                 }
;PCODE: $0000049E VOL: 0
; 0000 0235                                 }
; 0000 0236                         else
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
; 0000 0237                             {
; 0000 0238                             lcd_clear();
;PCODE: $000004A1 VOL: 0
; 0000 0239                             lcd_printf("Contact Admin");
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
; 0000 023A                             buzzing ();
;PCODE: $000004A9 VOL: 0
; 0000 023B                             buzzing ();
;PCODE: $000004AA VOL: 0
; 0000 023C                             delay_ms(1000);
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
; 0000 023D                             lcd_clear();
;PCODE: $000004AD VOL: 0
; 0000 023E                             start = 0;
;PCODE: $000004AE VOL: 0
; 0000 023F                             }
;PCODE: $000004AF VOL: 0
; 0000 0240                    }
; 0000 0241                     break;
;PCODE: $000004B0 VOL: 0
; 0000 0242 
; 0000 0243 
; 0000 0244                    default:
;PCODE: $000004B1 VOL: 0
; 0000 0245                         {
; 0000 0246                         lcd_clear();
;PCODE: $000004B2 VOL: 0
; 0000 0247                         lcd_printf(" Wrong ID ");
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
; 0000 0248                         buzzing ();
;PCODE: $000004BA VOL: 0
; 0000 0249                         buzzing ();
;PCODE: $000004BB VOL: 0
; 0000 024A                         start = 0;
;PCODE: $000004BC VOL: 0
; 0000 024B 
; 0000 024C                         delay_ms(1000);
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
; 0000 024D                         }
; 0000 024E                     break;
;PCODE: $000004BF VOL: 0
; 0000 024F                     }
;PCODE: $000004C0 VOL: 0
; 0000 0250 
; 0000 0251 }
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
;PCODE: $000004C5 VOL: 0
